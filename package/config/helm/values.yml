---
global:
  imagePullSecrets:
    - canonical-registry-credentials

backstage:
  image:
    registry: ghcr.io
    repository: kadras-io/kadras-developer-portal
    tag: sha-98b75f24663c3ed9049cdbd35093d87fcc7bf1b6
  args:
    - '--config'
    - '/app/app-config.yaml'
    - '--config'
    - '/app/app-config.production.yaml'

  replicas: 1
  
  readinessProbe:
    failureThreshold: 3
    httpGet:
      path: /healthcheck
      port: 7007
      scheme: HTTP
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 2
    timeoutSeconds: 2

  livenessProbe:
    failureThreshold: 3
    httpGet:
      path: /healthcheck
      port: 7007
      scheme: HTTP
    initialDelaySeconds: 60
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 2
  
  extraEnvVars:
    - name: BACKSTAGE_BASE_URL
      value: https://{{ .Values.ingress.host }}
  
  extraEnvVarsSecrets:
    - developer-portal-secrets

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: kadras-ca-issuer
  className: contour
  host: backstage.127.0.0.1.sslip.io
  tls:
    enabled: true
    secretName: backstage-tls-certificate

postgresql:
  enabled: true
  postgresqlDataDir: /var/lib/pgsql/data/userdata
  auth:
    existingSecret: postgresql-credentials
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 17.0.0
    pullSecrets:
      - canonical-registry-credentials
  primary:
    persistence:
      enabled: true
      size: 1Gi
      mountPath: /var/lib/pgsql/data
